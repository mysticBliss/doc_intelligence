

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    container_name: redis

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ./model:/root/.ollama
    container_name: ollama
    entrypoint: /bin/sh
    command: -c "ollama serve & sleep 5 && ollama pull qwen2.5vl:3b && ollama list && wait"
    healthcheck:
      test: ["CMD-SHELL", "ollama list"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    container_name: minio
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5

  mc:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add minio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      /usr/bin/mc mb minio/documents;
      /usr/bin/mc policy set public minio/documents;
      tail -f /dev/null;
      "
    container_name: mc

  api:
    build:
      context: .
      dockerfile: api.Dockerfile
    ports:
      - "8000:8000"

    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - DIP_BASE_URL=http://ollama:11434
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
    depends_on:
      ollama:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_healthy
      mc:
        condition: service_started
    container_name: doc_intelligence_api
    volumes:
      - .:/app
    command: ["python", "/app/src/wait_for_ollama.py", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app/src"]

  celery-worker:
    image: doc_intelligence-celery-worker
    build:
      context: .
      dockerfile: api.Dockerfile

    command: celery -A app.tasks.celery_app.celery worker -l info -P gevent -c 4
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - DIP_BASE_URL=http://api:8000
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - OLLAMA_BASE_URL=http://ollama:11434
    depends_on:
      - redis
      - api
    container_name: doc_intelligence_celery_worker

  celery-beat:
    image: doc_intelligence-celery-beat
    build:
      context: .
      dockerfile: api.Dockerfile
    command: celery -A app.tasks.celery_app.celery beat -l info
    volumes:
      - ./src:/app/src
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - DIP_BASE_URL=http://api:8000
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - OLLAMA_BASE_URL=http://ollama:11434
    depends_on:
      - redis
      - api
    container_name: doc_intelligence_celery_beat

  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
    ports:
      - "7860:7860"
    depends_on:
      - api

    environment:
      - API_URL=http://api:8000/api/process_pdf
    container_name: doc_intelligence_ui
    command: ["python", "app_ui.py"]